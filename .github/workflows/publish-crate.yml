name: Publish Crate

on:
  push:
    branches:
      - master

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Extract crate metadata
        id: metadata
        run: |
          metadata=$(cargo metadata --no-deps --format-version 1)
          version=$(jq -r '.packages[0].version' <<<"$metadata")
          name=$(jq -r '.packages[0].name' <<<"$metadata")
          echo "crate_version=$version" >> "$GITHUB_OUTPUT"
          echo "crate_name=$name" >> "$GITHUB_OUTPUT"
      - name: Check if version already published
        id: check_version
        run: |
          crate="${{ steps.metadata.outputs.crate_name }}"
          version="${{ steps.metadata.outputs.crate_version }}"
          if curl -fsSL "https://crates.io/api/v1/crates/${crate}/${version}" >/dev/null; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
            echo "crate ${crate} v${version} already published"
            echo "publish_status=skipped" >> "$GITHUB_ENV"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi
      - name: Cargo publish
        if: steps.check_version.outputs.exists != 'true'
        shell: bash
        run: |
          set -euo pipefail
          output=$(mktemp)
          if cargo publish --locked 2>&1 | tee "$output"; then
            echo "publish_status=published" >> "$GITHUB_ENV"
          else
            if grep -q "already exists" "$output"; then
              echo "crate version already exists, skipping publish"
              echo "publish_status=skipped" >> "$GITHUB_ENV"
            else
              cat "$output"
              exit 1
            fi
          fi
          rm -f "$output"
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
      - name: Create GitHub release
        if: steps.check_version.outputs.exists != 'true' && env.publish_status != 'skipped'
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.metadata.outputs.crate_version }}
          release_name: greentic-interfaces v${{ steps.metadata.outputs.crate_version }}
          body: |
            Automated release for greentic-interfaces v${{ steps.metadata.outputs.crate_version }}.
          commitish: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
