package greentic:host-import@0.4.0;

/// secret management helpers
interface secrets {
  use greentic:types-core/types@0.4.0.{tenant-ctx, iface-error};

  get: func(key: string, ctx: option<tenant-ctx>) -> result<string, iface-error>;
}

/// telemetry emission
interface telemetry {
  use greentic:types-core/types@0.4.0.{tenant-ctx};

  emit: func(span-json: string, ctx: option<tenant-ctx>);
}

/// outbound HTTP helper
interface http {
  /// HTTP request payload issued by packs/components
  record http-request {
    method: string,
    url: string,
    headers-json: option<string>,
    body: option<string>,
  }

  /// HTTP response returned by the host
  record http-response {
    status: u16,
    headers-json: option<string>,
    body: option<string>,
  }

  use greentic:types-core/types@0.4.0.{tenant-ctx, iface-error};

  fetch: func(req: http-request, ctx: option<tenant-ctx>) -> result<http-response, iface-error>;
}

world host-imports {
  import secrets;
  import telemetry;
  // http is optional in linking; allowed by policy
  import http;
}
